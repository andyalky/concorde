version: '2.1'
services:
    localstack:
        image: 'localstack/localstack:latest'
        container_name: 'aws-localstack'
        restart: always        
        ports:
            - '4572:4572'
            - '8888:8080'
        environment:
            - SERVICES=s3
            - DOCKER_HOST=unix:///var/run/docker.sock
            - DATA_DIR=/tmp/localstack/data/
        volumes:
            - '/tmp/localstack/:/tmp/localstack/'
            - '/var/run/docker.sock:/var/run/docker.sock'

    postgres:
        image: 'postgres:latest'
        container_name: 'airflow-postgres'
        restart: always
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
            - PGDATA=/var/lib/postgresql/data/pgdata/
        volumes:
            - postgres-data:/var/lib/postgresql/data/pgdata/       
        ports:
            - '5432:5432'

    webserver:
        image: 'puckel/docker-airflow:1.10.1'
        container_name: 'airflow-webserver'
        restart: always
        depends_on:
            - postgres #Actual DB underlying airflow
        volumes:
            - ./dags/:/usr/local/airflow/dags/
            - ./plugins/:/usr/local/airflow/plugins/
            - ./config/:/usr/local/airflow/config/
            - ./requirements.txt:/requirements.txt     
        environment:
            - LOAD_EX=n
            - EXECUTOR=Local
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=   
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
        ports:
            - '8080:8080'
        command: webserver
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

volumes:
    postgres-data: {}